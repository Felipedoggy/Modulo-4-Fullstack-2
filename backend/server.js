const express = require('express');
const cors = require('cors');
require('dotenv').config();

// Importar conex√£o com o banco
const { connection } = require('./config/database');

const authRoutes = require('./routes/auth');
const expenseRoutes = require('./routes/expenses');
const categoryRoutes = require('./routes/categories');

const app = express();

// Middleware
app.use(cors());
app.use(express.json());

// Rotas
app.use('/api/auth', authRoutes);
app.use('/api/expenses', expenseRoutes);
app.use('/api/categories', categoryRoutes);

// Rota padr√£o
app.get('/', (req, res) => {
  res.json({ 
    message: 'API Financeira com JWT e MySQL',
    status: 'Online',
    database: connection.state // Mostra o estado da conex√£o
  });
});

// Rota de health check
app.get('/health', (req, res) => {
  const dbStatus = connection.state === 'authenticated' ? 'Conectado' : 'Desconectado';
  res.json({ 
    status: 'OK', 
    database: dbStatus,
    timestamp: new Date().toISOString()
  });
});

const PORT = process.env.PORT || 5000;

// Verificar se conseguimos conectar ao banco antes de iniciar o servidor
connection.connect((err) => {
  if (err) {
    console.error('‚ùå Erro ao conectar com o banco de dados:', err.message);
    console.log('üìã Executando script de inicializa√ß√£o do banco...');
    
    // Tentar executar o script de inicializa√ß√£o
    const { exec } = require('child_process');
    exec('npm run init-db', (error, stdout, stderr) => {
      if (error) {
        console.error('‚ùå Erro ao executar script de inicializa√ß√£o:', error);
        return;
      }
      console.log('‚úÖ Script de inicializa√ß√£o executado:', stdout);
      
      // Tentar conectar novamente
      connection.connect((retryErr) => {
        if (retryErr) {
          console.error('‚ùå Ainda n√£o foi poss√≠vel conectar ao banco:', retryErr.message);
        } else {
          console.log('‚úÖ Conectado ao banco de dados ap√≥s inicializa√ß√£o');
        }
      });
    });
  } else {
    console.log('‚úÖ Conectado ao banco finance_app');
  }
});

app.listen(PORT, () => {
  console.log(`üöÄ Servidor rodando na porta ${PORT}`);
  console.log(`üìä Acesse: http://localhost:${PORT}`);
  console.log(`‚ù§Ô∏è  Health check: http://localhost:${PORT}/health`);
});

// Popular categorias para usu√°rios existentes ao iniciar
const populateUserCategories = require('./scripts/populate-user-categories');

connection.connect((err) => {
  if (err) {
    console.error('‚ùå Erro ao conectar com o banco de dados:', err.message);
  } else {
    console.log('‚úÖ Conectado ao banco finance_app');
    // Popular categorias para usu√°rios existentes
    populateUserCategories();
  }
});
// Exportar para testes
module.exports = app;